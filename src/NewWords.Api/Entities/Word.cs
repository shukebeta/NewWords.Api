using SqlSugar;
using System;

namespace NewWords.Api.Entities
{
    /// <summary>
    /// Represents a word and its LLM-generated explanations tailored for a specific user native language.
    /// </summary>
    [SugarTable("Words")]
    // Define the unique constraint across multiple columns
    [SugarIndex("UQ_Words_Text_Lang_NativeLang", nameof(WordText), OrderByType.Asc, nameof(WordLanguage), OrderByType.Asc, nameof(ExplanationLanguage), OrderByType.Asc, true)]
    public class Word
    {
        /// <summary>
        /// Unique identifier for this specific word explanation (Primary Key, Auto-Increment).
        /// </summary>
        [SugarColumn(IsPrimaryKey = true, IsIdentity = true)]
        public int WordId { get; set; }

        /// <summary>
        /// The actual word text (e.g., "ubiquitous"). Required.
        /// </summary>
        [SugarColumn(IsNullable = false, Length = 255)] // Added length
        public string WordText { get; set; } = string.Empty;

        /// <summary>
        /// The language code of the word itself (e.g., "en", "zh"). Required.
        /// </summary>
        [SugarColumn(IsNullable = false, Length = 20)] // Added length
        public string WordLanguage { get; set; } = string.Empty;

        /// <summary>
        /// The native language code this explanation is tailored for (e.g., "zh-CN", "en-US"). Required.
        /// </summary>
        [SugarColumn(IsNullable = false, Length = 20)] // Added length
        public string ExplanationLanguage { get; set; } = string.Empty;

        [SugarColumn(IsNullable = false)]
        public string MarkdownExplanation { get; set; } = string.Empty;

        /// <summary>
        /// Phonetic pronunciation (e.g., IPA). Nullable. Generated by LLM.
        /// </summary>
        [SugarColumn(IsNullable = true)]
        public string? Pronunciation { get; set; }

        /// <summary>
        /// Definitions of the word, potentially in JSON format or structured text, in the UserNativeLanguage. Nullable. Generated by LLM.
        /// </summary>
        [SugarColumn(IsNullable = true, ColumnDataType = "TEXT")] // Use TEXT for potentially long content
        public string? Definitions { get; set; }

        /// <summary>
        /// Example sentences using the word, potentially in JSON format or structured text, in the UserNativeLanguage. Nullable. Generated by LLM.
        /// </summary>
        [SugarColumn(IsNullable = true, ColumnDataType = "TEXT")] // Use TEXT for potentially long content
        public string? Examples { get; set; }

        /// <summary>
        /// Timestamp when the word data was created (Required, Unix timestamp as long).
        /// </summary>
        [SugarColumn(IsNullable = false)]
        public long CreatedAt { get; set; } = 0; // Default to 0 (Unix epoch start)

        /// <summary>
        /// Identifier of the LLM model used for generation (e.g., "openrouter:meta-llama/llama-4-scout:free"). Nullable.
        /// </summary>
        [SugarColumn(IsNullable = true, Length = 100)]
        public string? ProviderModelName { get; set; }
    }
}
