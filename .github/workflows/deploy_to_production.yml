name: Deploy NewWords.Api to production

on:
  push:
    branches: [ master ]

env:
  SERVICE_NAME: new-words-api.service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Publish
        run: |
          dotnet publish --configuration Release --self-contained --runtime linux-arm64 --output ./publish
          sed -i "s/PRODUCTION_MYSQL_PASSWORD/${{ secrets.PRODUCTION_MYSQL_PASSWORD }}/g" ./publish/appsettings.json
          sed -i "s/PRODUCTION_SYMMETRIC_SECURITY_KEY/${{ secrets.PRODUCTION_SYMMETRIC_SECURITY_KEY }}/g" ./publish/appsettings.json
          sed -i "s/XAI_API_KEY/${{ secrets.XAI_API_KEY }}/g" ./publish/appsettings.json
          COMMIT_HASH=$(git rev-parse --short HEAD)
          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          VERSION_INFO="$COMMIT_HASH ($BUILD_DATE)"
          sed -i "s/VERSION_PLACEHOLDER/$VERSION_INFO/" ./publish/appsettings.json

      - name: Create SSH key file
        run: |
          mkdir -p $HOME/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > $HOME/.ssh/id_ed25519
          chmod 600 $HOME/.ssh/id_ed25519
          # Optional: Add known hosts to avoid fingerprint prompts
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> $HOME/.ssh/known_hosts
          # Add debugging information
          echo "=== SSH Directory Contents ==="
          ls -la $HOME/.ssh/
          echo "=== Key File Size ==="
          stat -c %s $HOME/.ssh/id_ed25519
          echo "=== First line of key file (safe to show) ==="
          head -n 1 $HOME/.ssh/id_ed25519
          echo "Current directory: $(pwd)"
          echo "Home directory: $HOME"

      - name: Deploy to production and replace placeholders - prepare directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key_path: /home/runner/.ssh/id_ed25519
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p ${{ secrets.DEPLOY_PATH }}

      - name: Copy files to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key_path: /home/runner/.ssh/id_ed25519
          port: ${{ secrets.SSH_PORT }}
          source: "publish/*"
          target: ${{ secrets.DEPLOY_PATH }}
          strip_components: 1

      - name: Create/Update systemd service file and start the service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key_path: /home/runner/.ssh/id_ed25519
          port: ${{ secrets.SSH_PORT }}
          script: |
            printf "%s\n" "[Unit]" \
              "Description=NewWords Api" \
              "After=network.target" \
              "" \
              "[Service]" \
              "Type=simple" \
              "User=${{ secrets.SSH_USERNAME }}" \
              "WorkingDirectory=${{ secrets.DEPLOY_PATH }}" \
              "ExecStart=/home/ubuntu/dotnet/dotnet ${{ secrets.DEPLOY_PATH }}/NewWords.Api.dll" \
              "Restart=always" \
              "RestartSec=10" \
              "SyslogIdentifier=dotnet-app" \
              "Environment=ASPNETCORE_ENVIRONMENT=Production" \
              "" \
              "[Install]" \
              "WantedBy=multi-user.target" > /tmp/${{ env.SERVICE_NAME }}
            sudo mv /tmp/${{ env.SERVICE_NAME }} /etc/systemd/system/${{ env.SERVICE_NAME }}
            sudo chown root:root /etc/systemd/system/${{ env.SERVICE_NAME }}
            sudo systemctl daemon-reload
            sudo systemctl enable ${{ env.SERVICE_NAME }}
            sudo systemctl restart ${{ env.SERVICE_NAME }}
